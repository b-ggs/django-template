name: Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres # pragma: allowlist secret
      SECRET_KEY: test # pragma: allowlist secret

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres # pragma: allowlist secret
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - "5432:5432"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -
        env:
          POETRY_VERSION: "1.6.1"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry

      - name: Install dependencies with Poetry
        run: poetry install

      - name: Run black
        run: poetry run black --check --diff .
        if: always()

      - name: Run ruff
        run: poetry run ruff --diff .
        if: always()

      - name: Run bandit
        run: poetry run bandit -c pyproject.toml -r .
        if: always()

      - name: Run detect-secrets
        run: poetry run detect-secrets scan --baseline .secrets.baseline
        if: always()

      - name: Run djhtml
        run: poetry run djhtml --check .
        if: always()

      - name: Run pyright
        run: poetry run pyright .
        if: always()

      - name: Run prettier
        run: npx prettier@3.0.3 --check .
        if: always()

      - name: Check for missing migrations
        run: poetry run python manage.py makemigrations --check --noinput
        if: always()

      - name: Collect staticfiles
        run: poetry run python3 manage.py collectstatic --noinput

      - name: Run tests
        run: poetry run python3 manage.py test --settings=django_template.settings.test -v=2
